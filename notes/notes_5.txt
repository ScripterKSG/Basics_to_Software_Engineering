Exception Handling
Why do we need exception handling?
Errors in a python module produce a trace back error and stops the execution of the module. 
Such Errors are useful for the developers not the user. 
Expect which sections of your code that may cause an error, put such sections inside try-except blocks. 
If the code in the try section works, the except is skipped. Otherwise, we jump in the except section.

Structure:
-----
try:
	pass
except: # This will catch all exceptions.
	pass
[except Exception as e:
	print(e)] # saves exception to variable e
else:
	pass
finally:
	pass
-----
else is executed when the try section does not raise an exception.
finally section is always executed (whether the code is successful or we threw an exception). can be used to release resources. 
Sometimes we need to raise an exception manually. The command "raise" forces an error to occur.
-----
To be specific, "Exception" can be replaced by
NameError
TypeError
...

